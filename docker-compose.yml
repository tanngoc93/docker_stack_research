version: "3.8"

networks:
  monitoring:
    driver: bridge
  bridge-network:
    driver: bridge

volumes:
  db:
  esdata:
  bundle_cache:
  grafana_data:
  prometheus_data:

services:
  ################################################################
  # monitoring stack
  ################################################################

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    ports:
      - 9100
    networks:
      - monitoring

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./.dockerdev/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    ports:
      - 9090:9090
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    ports:
      - 3030:3000
    environment:
      GF_SECURITY_ADMIN_PASSWORD: password
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - monitoring

  ################################################################
  ################################################################

  adminer:
    image: adminer
    ports:
      - 8088:8080
    networks:
      - bridge-network
      - monitoring

  db:
    image: postgres:14.0
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432"
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - bridge-network
      - monitoring

  redis:
    image: redis:6.2.5
    command: redis-server
    networks:
      - bridge-network
      - monitoring

  web:
    tty: true
    stdin_open: true
    build:
      context: .
      dockerfile: ./.dockerdev/Dockerfile
    working_dir: /home/app/html
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      REDIS_HOST: redis
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      BUNDLE_PATH: /bundle/vendor
      RAILS_ENV: development
      PORT: 3000
    command: /bin/sh ".dockerdev/commander/commander.dev.sh"
    volumes:
      - .:/home/app/html:rw
      - bundle_cache:/bundle
    ports:
      - "3000:3000"
      - "5000:5000"
      - "5001:5001"
    depends_on:
      - db
      - redis
      - elasticsearch
    networks:
      - bridge-network
      - monitoring

  sidekiq:
    build:
      context: .
      dockerfile: ./.dockerdev/Dockerfile
    working_dir: /home/app/html
    environment:
      ELASTICSEARCH_URL: "http://elasticsearch:9200"
      REDIS_HOST: redis
      DATABASE_HOST: db
      DATABASE_PORT: 5432
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: postgres
      BUNDLE_PATH: /bundle/vendor
      RAILS_ENV: development
      PORT: 3000
    command: /bin/sh -c "bundle check || bundle install && bundle exec sidekiq -C config/sidekiq.yml"
    volumes:
      - .:/home/app/html
      - bundle_cache:/bundle
    depends_on:
      - db
      - redis
      - elasticsearch
    networks:
      - bridge-network
      - monitoring

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.3
    restart: always
    environment:
      - discovery.type=single-node
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536
    cap_add:
      - IPC_LOCK
    ports:
      - "9200:9200"
    mem_limit: 2g
    volumes:
      - esdata:/usr/share/elasticsearch/data
    networks:
      - bridge-network
      - monitoring
